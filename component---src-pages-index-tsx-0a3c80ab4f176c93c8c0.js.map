{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["Page","data","allMarkdownRemark","edges","map","edge","index","frontmatter","node","path","title","authors","key","to","pageQuery"],"mappings":"2FAAA,sFA8BeA,UArBmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACnC,OACE,oCACE,4CACA,4BACGA,EAAKC,kBAAkBC,MAAMC,KAAI,SAACC,EAAMC,GACvC,IAAMC,EAAcF,EAAKG,KAAKD,YAC9B,IAAKA,EAAa,OAAO,KAFwB,IAGzCE,EAAyBF,EAAzBE,KAAMC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,QACrB,OACE,wBAAIC,IAAKH,UAAQH,GACf,kBAAC,OAAD,CAAMO,GAAIJ,GACPC,EADH,MACaC,EAAS,YAW7B,IAAMG,EAAY","file":"component---src-pages-index-tsx-0a3c80ab4f176c93c8c0.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\n\nimport { IndexPageQuery } from '~/types/gatsby-graphql-types';\n\ninterface PageProps {\n  location: Location;\n  data: IndexPageQuery;\n}\nconst Page: React.FC<PageProps> = ({ data }) => {\n  return (\n    <>\n      <h1>LangDev Blog</h1>\n      <ul>\n        {data.allMarkdownRemark.edges.map((edge, index) => {\n          const frontmatter = edge.node.frontmatter;\n          if (!frontmatter) return null;\n          const { path, title, authors } = frontmatter;\n          return (\n            <li key={path ?? index}>\n              <Link to={path!}>\n                {title} - {authors}{' '}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Page;\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    allMarkdownRemark(sort: { fields: frontmatter___date }) {\n      edges {\n        node {\n          frontmatter {\n            path\n            date\n            title\n            authors\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}