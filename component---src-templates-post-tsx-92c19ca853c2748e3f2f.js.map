{"version":3,"sources":["webpack:///./src/templates/post.tsx","webpack:///./src/templates/post.module.css"],"names":["Post","props","markdownRemark","data","frontmatter","date","title","authors","__html","html","className","style","rel","href","type","dateTime","dangerouslySetInnerHTML","to","module","exports"],"mappings":"6FAAA,wHAUe,SAASA,EAAKC,GAC3B,IAAQC,EAAmBD,EAAME,KAAzBD,eACR,EAAiCA,aAAjC,EAAiCA,EAAgBE,YAAzCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QACfC,EAASN,aAAH,EAAGA,EAAgBO,KAC/B,OACE,0BAAMC,UAAWC,QACf,kBAAC,IAAD,KACE,+BAAQL,GACR,0BAAMM,IAAI,OAAOC,KAAK,mBAAmBC,KAAK,kBAC9C,0BAAMF,IAAI,OAAOC,KAAK,uBAAuBC,KAAK,eAEpD,4BAAKR,GACL,uBAAGI,UAAWC,QACZ,0BAAMI,SAAUV,GAAOA,GADzB,QAC0C,2BAAIE,IAE9C,6BAASG,UAAU,gBAAgBM,wBAAyB,CAAER,YAC9D,4BAAQE,UAAWC,UACjB,kBAAC,OAAD,CAAMM,GAAG,KAAT,iB,uBC1BRC,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,OAAS,+B","file":"component---src-templates-post-tsx-92c19ca853c2748e3f2f.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport 'github-markdown-css'\n\nimport * as style from './post.module.css'\n\ntype PostProps = {\n  data: GatsbyTypes.PostPageQuery\n}\nexport default function Post(props: PostProps) {\n  const { markdownRemark } = props.data\n  const { date, title, authors } = markdownRemark?.frontmatter!\n  const __html = markdownRemark?.html!\n  return (\n    <main className={style.main}>\n      <Helmet>\n        <title>{title}</title>\n        <link rel=\"icon\" href=\"/static/logo.svg\" type=\"image/svg+xml\" />\n        <link rel=\"icon\" href=\"/static/logo-512.png\" type=\"image/png\" />\n      </Helmet>\n      <h1>{title}</h1>\n      <p className={style.info}>\n        <time dateTime={date}>{date}</time>, by <b>{authors}</b>\n      </p>\n      <article className=\"markdown-body\" dangerouslySetInnerHTML={{ __html }} />\n      <footer className={style.footer}>\n        <Link to=\"/\">목록으로 돌아가기</Link>\n      </footer>\n    </main>\n  )\n}\n\nexport const pageQuery = graphql`\n  query PostPage($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date\n        title\n        authors\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"post-module--main--1raJR\",\"info\":\"post-module--info--1PO2a\",\"footer\":\"post-module--footer--2s7dq\"};"],"sourceRoot":""}