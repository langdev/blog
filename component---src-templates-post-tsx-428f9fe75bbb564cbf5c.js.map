{"version":3,"sources":["webpack:///./src/templates/post.tsx"],"names":["Info","Footer","Post","props","markdownRemark","data","frontmatter","date","title","authors","__html","html","rel","href","type","dateTime","className","dangerouslySetInnerHTML","to"],"mappings":"oOASA,IAAMA,EAAO,iBAAH,iCAAG,CAAH,8DAKJC,EAAS,sBAAH,mCAAG,CAAH,2DAQG,SAASC,EAAKC,GAAkB,IACrCC,EAAmBD,EAAME,KAAzBD,eADqC,EAEZA,aAFY,EAEZA,EAAgBE,YAAzCC,EAFqC,EAErCA,KAAMC,EAF+B,EAE/BA,MAAOC,EAFwB,EAExBA,QACfC,EAASN,aAAH,EAAGA,EAAgBO,KAC/B,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,yBAAQH,GACR,oBAAMI,IAAI,OAAOC,KAAK,mBAAmBC,KAAK,kBAC9C,oBAAMF,IAAI,OAAOC,KAAK,uBAAuBC,KAAK,eAEpD,sBAAKN,GACL,YAACR,EAAD,KACE,oBAAMe,SAAUR,GAAOA,GADzB,QAC0C,qBAAIE,IAE9C,uBAASO,UAAU,gBAAgBC,wBAAyB,CAAEP,YAC9D,YAACT,EAAD,KACE,YAAC,OAAD,CAAMiB,GAAG,KAAT,iB","file":"component---src-templates-post-tsx-428f9fe75bbb564cbf5c.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport 'github-markdown-css'\n\nimport { Main } from '~/src/common/styles'\nimport { PostPageQuery } from '~/types/gatsby-graphql-types'\n\nconst Info = styled.p`\n  margin-bottom: 2em;\n  text-align: right;\n`\n\nconst Footer = styled.footer`\n  margin-top: 2em;\n  text-align: right;\n`\n\ntype PostProps = {\n  data: PostPageQuery\n}\nexport default function Post(props: PostProps) {\n  const { markdownRemark } = props.data\n  const { date, title, authors } = markdownRemark?.frontmatter!\n  const __html = markdownRemark?.html!\n  return (\n    <Main>\n      <Helmet>\n        <title>{title}</title>\n        <link rel=\"icon\" href=\"/static/logo.svg\" type=\"image/svg+xml\" />\n        <link rel=\"icon\" href=\"/static/logo-512.png\" type=\"image/png\" />\n      </Helmet>\n      <h1>{title}</h1>\n      <Info>\n        <time dateTime={date}>{date}</time>, by <b>{authors}</b>\n      </Info>\n      <article className=\"markdown-body\" dangerouslySetInnerHTML={{ __html }} />\n      <Footer>\n        <Link to=\"/\">목록으로 돌아가기</Link>\n      </Footer>\n    </Main>\n  )\n}\n\nexport const pageQuery = graphql`\n  query PostPage($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date\n        title\n        authors\n      }\n    }\n  }\n`\n"],"sourceRoot":""}